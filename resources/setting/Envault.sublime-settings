{
    // When an Envault configuration is active within a current window, the
    // status bar will contain a text segment that indicates this so that you
    // can tell what environment is active.
    //
    // This variable controls what that text looks like. This supports the
    // variables: $folder, $file, $file_path, $file_name, $file_base_name,
    //            $file_extension
    //
    // $file and the variations represent the currently selected configuration
    // file, while $folder is the last path segment of the configuration file
    // location (the folder within which the envault configuration is stored).
    //
    // Setting this to an empty string will disable the status bar formatting.
    "status_bar_format": "[Envault: ${file_base_name}]",

    // Envault always updates the environment whenever the "build" command is
    // executed to ensure that the environment for any builds that trigger in
    // a project have the appropriate environment.
    //
    // Additional window commands can be added here by name; whenever a command
    // listed here is executed, the environment will be updated while it is
    // actively running.
    //
    // The default ensures that directly executed Terminus terminals as well as
    // explicit invocations of the exec commands (outside of a build) also have
    // an updated environment.
    "added_watch_commands": ["exec", "terminus_exec", "terminus_open"],

    // When creating a new empty envault configuration file, this sets what the
    // api key in the generated file starts off with by default.
    "default_api_key": "envault_dev_key",

    // When creating a new empty envault configuration file, this sets what the
    // url in the generated file starts off with by default.
    "default_api_url": "http://localhost:8787/",

    // When enabled, saving an Envault configuration file that is currently
    // loaded and active in any window will cause the config to be reloaded and
    // keys re-requested from the server.
    "reload_config_on_save": true,

    // When diagnosing issues with the package, this value can be set to true to
    // enable additional debugging information.
    //
    // This makes the package more verbose and as such is not normally left
    // turned on during normal usage.
    "debug": false
}